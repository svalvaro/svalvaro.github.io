{
  "hash": "822cb84601e53028b398248be3cf5d6e",
  "result": {
    "markdown": "---\ntitle: \"Simulating the Birthday Paradox\"\ndescription: \"I couldn't believe the birthday paradox, so I tested it!\"\nauthor:\n  - name: Álvaro Sánchez\n    url: https://svalvaro.github.io/\ndate: 03-10-2023\ncategories: [R, echarts, simulation]\ncitation: \n  url: https://svalvaro.github.io/posts/03-10-2023/ \nimage: birthday-cake.png\ndraft: false \nfreeze: true\n---\n\n\nParadoxes are named as such because they are counterintuitive. And this gives us, data-curious people, an excellent chance to play around with them.\n\n**How many people are needed so the probability that at least, two of them share a birthday is 50%?**\n\nI suggest the reader stop for a couple of minutes and think about it. When I learned the answer, I was so surprised that I had to test it to believe it.\n\nGo to [Results](#results) if you just want to know what is the probability.\n\n## Plan\n\nThe idea is simple. I’ll create multiple groups from two to n number of people. For each group, I'll count how many times at least two people share a birthday. Then repeat this process multiple times (_y_), to obtain reproducible results\n\nSo if **_n_  = 4**, means a group of four people, and **_y_ = 5**, means to check the probabilities three times. The simulation will be like this:\n\n- Choose two random people (_n - 2_), do they share a birthday? --> Count the result. Repeat _y_ times. Calculate the probability for a group of two people.\n- Choose three random people (_n - 1_), do at least two of them share a birthday? --> Count the result. Repeat _y_ times. Calculate the probability for a group of three people.\n- Choose four random people (_n_), do at least two of them share a birthday?? --> Count the result. Repeat _y_ times. Calculate  the probability for a group of four people.\n\n\nFor each group, calculating the probability is simple. For example, if in the group of four people, only there was a simulation were people shared birthdays but no shared birthdays in the other four, the probability would be 1/5 = 20%.\n\n\n## Simulation   \n\nLet's select bigger groups of up to 80 people, and let's check them 1000 times each.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumber_people <- 80\nnumber_tests <- 1000\n```\n:::\n\n\nWe need a function that creates random birthdays for a group of `n` people.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_birthdays <- function(n_people_group) {\n  round(runif(n = n_people_group, min = 1, max = 365), digits = 0 )\n}\ngenerate_birthdays(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  94  39 354\n```\n:::\n\n```{.r .cell-code}\ngenerate_birthdays(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 323   5 128 169 110   1 100 347 125  68\n```\n:::\n:::\n\n\nNote, how we are assuming that birthdays are randomly and uniformly distributed across the population. In reality, more people are born in September and October.\n\nLet's create a function that will tell us if at least two people share a birthday: Since there are 365 per year\nwe can just numbers from 1 to 365.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbday_group_3_people <- c(10, 46, 209) # noone share birthday, should be false\nbday_group_5_people <- c(10, 46, 209, 46, 265) # two people share birthdays, should be true\nbday_group_7_people<- c(10, 46, 209, 46, 265, 46, 2) # Three people share birthday, should be true\n\ncheck_share_birthday <- function(data, min_num_shared_birthdays = 2) {\n  max(table(data)) >= min_num_shared_birthdays\n}\n# table is a nice function that does the count for us:\ntable(bday_group_5_people)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nbday_group_5_people\n 10  46 209 265 \n  1   2   1   1 \n```\n:::\n\n```{.r .cell-code}\n# Checking that the function works as expected\ncheck_share_birthday(bday_group_3_people)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\ncheck_share_birthday(bday_group_5_people)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\ncheck_share_birthday(bday_group_7_people)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\nThis is where the fun happens:\nNow we just iterate over the groups. We create a vector containing the birthdays of those people and check if those people share a birthday, if they do, we keep track of it. Then we repeat this process _y_ times. Once we have completed _y_ tests for a single group, we move to the next one and repeat the process.\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nresults <- data.frame()\n\nfor(individual_group in 2:number_people) { \n  shared_birthdays_counter <- 0\n\n  for (test in seq_len(number_tests)) { \n    random_birthdays_vector <- generate_birthdays(individual_group) \n    \n    if (check_share_birthday(random_birthdays_vector)) {\n      shared_birthdays_counter <- shared_birthdays_counter + 1\n    }\n\n  }\n  probability_duplicates <- 100 * (shared_birthdays_counter/number_tests)\n\n  results <- rbind(results, c(individual_group, probability_duplicates))\n}\ncolnames(results) <- c(\"people_in_group\", \"probability_shared_birthday\")\nresults <- round(results, 1)\nhead(results)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  people_in_group probability_shared_birthday\n1               2                         0.1\n2               3                         0.7\n3               4                         1.2\n4               5                         2.7\n5               6                         4.2\n6               7                         5.6\n```\n:::\n:::\n\n\n## Results\n\nLet's check how many people are needed in a group to get a probability of ~50%.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresults |> \n  dplyr::filter(\n    probability_shared_birthday > 45,\n    probability_shared_birthday < 55\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  people_in_group probability_shared_birthday\n1              21                        45.3\n2              22                        45.8\n3              23                        51.9\n4              24                        53.0\n```\n:::\n:::\n\n\nAccording to our simulation, **only 23 people are needed to have a probability of 50% to share a birthday!**\n\nI'm also curious about what is the minimum amount of people where having a shared birthday is almost certain:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups_prob_99_perc <- results |> \n  dplyr::filter(\n    probability_shared_birthday > 99\n  )\nhead(groups_prob_99_perc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  people_in_group probability_shared_birthday\n1              55                        99.1\n2              57                        99.4\n3              59                        99.3\n4              60                        99.2\n5              61                        99.6\n6              62                        99.7\n```\n:::\n:::\n\n\nIt seems that with 55 people, the chances to have at least one shared birthday are 99%!\n\n## Visualising the results\n\nLet's plot those results and see what we can observe.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(highcharter)\n\nhchart(\n    results,\n    type = \"line\",\n    hcaes(x = people_in_group, y = probability_shared_birthday)\n  ) |>\n  hc_title(text = \"<b>Probability of at least two people having the same birthday</b>\") |>\n  hc_subtitle(text = \"<i>A total of 1000 simulations per group were computed</i>\") |>\n  hc_credits(enabled = TRUE, text = \"https://svalvaro.github.io/\") |>\n  hc_xAxis(title = list(text = \"Number of people in the group\")) |> \n  hc_yAxis(title = list(text = \"Probability (%)\")) |> \n  hc_yAxis(max = 100) |> \n  hc_tooltip(\n    pointFormat = \"\n    <b># People in the group: </b>{point.x:,.f}<br>\n    <b>Probability: </b>{point.y:,.1f}%<br>\"\n  ) |>\n  hc_add_theme(hc_theme_economist()) \n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"highchart html-widget html-fill-item\" id=\"htmlwidget-10f26f27751e1cefb590\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-10f26f27751e1cefb590\">{\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true},\"title\":{\"text\":\"<b>Probability of at least two people having the same birthday<\\/b>\"},\"yAxis\":{\"title\":{\"text\":\"Probability (%)\"},\"type\":\"linear\",\"max\":100},\"credits\":{\"enabled\":true,\"text\":\"https://svalvaro.github.io/\"},\"exporting\":{\"enabled\":false},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0,\"showInLegend\":false},\"treemap\":{\"layoutAlgorithm\":\"squarified\"},\"scatter\":{\"marker\":{\"symbol\":\"circle\"}}},\"series\":[{\"group\":\"group\",\"data\":[{\"people_in_group\":2,\"probability_shared_birthday\":0.1,\"x\":2,\"y\":0.1},{\"people_in_group\":3,\"probability_shared_birthday\":0.7,\"x\":3,\"y\":0.7},{\"people_in_group\":4,\"probability_shared_birthday\":1.2,\"x\":4,\"y\":1.2},{\"people_in_group\":5,\"probability_shared_birthday\":2.7,\"x\":5,\"y\":2.7},{\"people_in_group\":6,\"probability_shared_birthday\":4.2,\"x\":6,\"y\":4.2},{\"people_in_group\":7,\"probability_shared_birthday\":5.6,\"x\":7,\"y\":5.6},{\"people_in_group\":8,\"probability_shared_birthday\":7.2,\"x\":8,\"y\":7.2},{\"people_in_group\":9,\"probability_shared_birthday\":12.6,\"x\":9,\"y\":12.6},{\"people_in_group\":10,\"probability_shared_birthday\":10.8,\"x\":10,\"y\":10.8},{\"people_in_group\":11,\"probability_shared_birthday\":14.3,\"x\":11,\"y\":14.3},{\"people_in_group\":12,\"probability_shared_birthday\":18.6,\"x\":12,\"y\":18.6},{\"people_in_group\":13,\"probability_shared_birthday\":20.2,\"x\":13,\"y\":20.2},{\"people_in_group\":14,\"probability_shared_birthday\":21.4,\"x\":14,\"y\":21.4},{\"people_in_group\":15,\"probability_shared_birthday\":26.3,\"x\":15,\"y\":26.3},{\"people_in_group\":16,\"probability_shared_birthday\":28,\"x\":16,\"y\":28},{\"people_in_group\":17,\"probability_shared_birthday\":31.6,\"x\":17,\"y\":31.6},{\"people_in_group\":18,\"probability_shared_birthday\":33.7,\"x\":18,\"y\":33.7},{\"people_in_group\":19,\"probability_shared_birthday\":39.2,\"x\":19,\"y\":39.2},{\"people_in_group\":20,\"probability_shared_birthday\":43.3,\"x\":20,\"y\":43.3},{\"people_in_group\":21,\"probability_shared_birthday\":45.3,\"x\":21,\"y\":45.3},{\"people_in_group\":22,\"probability_shared_birthday\":45.8,\"x\":22,\"y\":45.8},{\"people_in_group\":23,\"probability_shared_birthday\":51.9,\"x\":23,\"y\":51.9},{\"people_in_group\":24,\"probability_shared_birthday\":53,\"x\":24,\"y\":53},{\"people_in_group\":25,\"probability_shared_birthday\":58.4,\"x\":25,\"y\":58.4},{\"people_in_group\":26,\"probability_shared_birthday\":61,\"x\":26,\"y\":61},{\"people_in_group\":27,\"probability_shared_birthday\":60.7,\"x\":27,\"y\":60.7},{\"people_in_group\":28,\"probability_shared_birthday\":62.5,\"x\":28,\"y\":62.5},{\"people_in_group\":29,\"probability_shared_birthday\":69.09999999999999,\"x\":29,\"y\":69.09999999999999},{\"people_in_group\":30,\"probability_shared_birthday\":68.2,\"x\":30,\"y\":68.2},{\"people_in_group\":31,\"probability_shared_birthday\":74.09999999999999,\"x\":31,\"y\":74.09999999999999},{\"people_in_group\":32,\"probability_shared_birthday\":75.8,\"x\":32,\"y\":75.8},{\"people_in_group\":33,\"probability_shared_birthday\":79.8,\"x\":33,\"y\":79.8},{\"people_in_group\":34,\"probability_shared_birthday\":79,\"x\":34,\"y\":79},{\"people_in_group\":35,\"probability_shared_birthday\":81.2,\"x\":35,\"y\":81.2},{\"people_in_group\":36,\"probability_shared_birthday\":85.40000000000001,\"x\":36,\"y\":85.40000000000001},{\"people_in_group\":37,\"probability_shared_birthday\":83.7,\"x\":37,\"y\":83.7},{\"people_in_group\":38,\"probability_shared_birthday\":87.09999999999999,\"x\":38,\"y\":87.09999999999999},{\"people_in_group\":39,\"probability_shared_birthday\":89.3,\"x\":39,\"y\":89.3},{\"people_in_group\":40,\"probability_shared_birthday\":90.09999999999999,\"x\":40,\"y\":90.09999999999999},{\"people_in_group\":41,\"probability_shared_birthday\":90.2,\"x\":41,\"y\":90.2},{\"people_in_group\":42,\"probability_shared_birthday\":93,\"x\":42,\"y\":93},{\"people_in_group\":43,\"probability_shared_birthday\":93.7,\"x\":43,\"y\":93.7},{\"people_in_group\":44,\"probability_shared_birthday\":93.2,\"x\":44,\"y\":93.2},{\"people_in_group\":45,\"probability_shared_birthday\":93.59999999999999,\"x\":45,\"y\":93.59999999999999},{\"people_in_group\":46,\"probability_shared_birthday\":95.5,\"x\":46,\"y\":95.5},{\"people_in_group\":47,\"probability_shared_birthday\":95.8,\"x\":47,\"y\":95.8},{\"people_in_group\":48,\"probability_shared_birthday\":95,\"x\":48,\"y\":95},{\"people_in_group\":49,\"probability_shared_birthday\":97.2,\"x\":49,\"y\":97.2},{\"people_in_group\":50,\"probability_shared_birthday\":97.5,\"x\":50,\"y\":97.5},{\"people_in_group\":51,\"probability_shared_birthday\":97.5,\"x\":51,\"y\":97.5},{\"people_in_group\":52,\"probability_shared_birthday\":97.2,\"x\":52,\"y\":97.2},{\"people_in_group\":53,\"probability_shared_birthday\":97.90000000000001,\"x\":53,\"y\":97.90000000000001},{\"people_in_group\":54,\"probability_shared_birthday\":98.40000000000001,\"x\":54,\"y\":98.40000000000001},{\"people_in_group\":55,\"probability_shared_birthday\":99.09999999999999,\"x\":55,\"y\":99.09999999999999},{\"people_in_group\":56,\"probability_shared_birthday\":98.59999999999999,\"x\":56,\"y\":98.59999999999999},{\"people_in_group\":57,\"probability_shared_birthday\":99.40000000000001,\"x\":57,\"y\":99.40000000000001},{\"people_in_group\":58,\"probability_shared_birthday\":98.8,\"x\":58,\"y\":98.8},{\"people_in_group\":59,\"probability_shared_birthday\":99.3,\"x\":59,\"y\":99.3},{\"people_in_group\":60,\"probability_shared_birthday\":99.2,\"x\":60,\"y\":99.2},{\"people_in_group\":61,\"probability_shared_birthday\":99.59999999999999,\"x\":61,\"y\":99.59999999999999},{\"people_in_group\":62,\"probability_shared_birthday\":99.7,\"x\":62,\"y\":99.7},{\"people_in_group\":63,\"probability_shared_birthday\":99.7,\"x\":63,\"y\":99.7},{\"people_in_group\":64,\"probability_shared_birthday\":99.5,\"x\":64,\"y\":99.5},{\"people_in_group\":65,\"probability_shared_birthday\":99.8,\"x\":65,\"y\":99.8},{\"people_in_group\":66,\"probability_shared_birthday\":99.7,\"x\":66,\"y\":99.7},{\"people_in_group\":67,\"probability_shared_birthday\":99.8,\"x\":67,\"y\":99.8},{\"people_in_group\":68,\"probability_shared_birthday\":99.8,\"x\":68,\"y\":99.8},{\"people_in_group\":69,\"probability_shared_birthday\":99.8,\"x\":69,\"y\":99.8},{\"people_in_group\":70,\"probability_shared_birthday\":100,\"x\":70,\"y\":100},{\"people_in_group\":71,\"probability_shared_birthday\":99.8,\"x\":71,\"y\":99.8},{\"people_in_group\":72,\"probability_shared_birthday\":100,\"x\":72,\"y\":100},{\"people_in_group\":73,\"probability_shared_birthday\":99.90000000000001,\"x\":73,\"y\":99.90000000000001},{\"people_in_group\":74,\"probability_shared_birthday\":100,\"x\":74,\"y\":100},{\"people_in_group\":75,\"probability_shared_birthday\":100,\"x\":75,\"y\":100},{\"people_in_group\":76,\"probability_shared_birthday\":100,\"x\":76,\"y\":100},{\"people_in_group\":77,\"probability_shared_birthday\":99.90000000000001,\"x\":77,\"y\":99.90000000000001},{\"people_in_group\":78,\"probability_shared_birthday\":100,\"x\":78,\"y\":100},{\"people_in_group\":79,\"probability_shared_birthday\":99.90000000000001,\"x\":79,\"y\":99.90000000000001},{\"people_in_group\":80,\"probability_shared_birthday\":100,\"x\":80,\"y\":100}],\"type\":\"line\"}],\"xAxis\":{\"type\":\"linear\",\"title\":{\"text\":\"Number of people in the group\"}},\"subtitle\":{\"text\":\"<i>A total of 1000 simulations per group were computed<\\/i>\"},\"tooltip\":{\"pointFormat\":\"\\n    <b># People in the group: <\\/b>{point.x:,.f}<br>\\n    <b>Probability: <\\/b>{point.y:,.1f}%<br>\"}},\"theme\":{\"colors\":[\"#6794a7\",\"#014d64\",\"#76c0c1\",\"#01a2d9\",\"#7ad2f6\",\"#00887d\",\"#adadad\",\"#7bd3f6\",\"#7c260b\",\"#ee8f71\",\"#76c0c1\",\"#a18376\"],\"chart\":{\"backgroundColor\":\"#d5e4eb\",\"style\":{\"fontFamily\":\"Droid Sans\",\"color\":\"#3C3C3C\"}},\"title\":{\"align\":\"left\",\"style\":{\"fontWeight\":\"bold\"}},\"subtitle\":{\"align\":\"left\"},\"yAxis\":{\"gridLineColor\":\"#FFFFFF\",\"lineColor\":\"#FFFFFF\",\"minorGridLineColor\":\"#FFFFFF\",\"tickColor\":\"#D7D7D8\",\"tickWidth\":1,\"title\":{\"style\":{\"color\":\"#A0A0A3\"}}},\"tooltip\":{\"backgroundColor\":\"#FFFFFF\",\"borderColor\":\"#76c0c1\",\"style\":{\"color\":\"#000000\"}},\"legend\":{\"itemStyle\":{\"color\":\"#3C3C3C\"},\"itemHiddenStyle\":{\"color\":\"#606063\"}},\"credits\":{\"style\":{\"color\":\"#666\"}},\"labels\":{\"style\":{\"color\":\"#D7D7D8\"}},\"drilldown\":{\"activeAxisLabelStyle\":{\"color\":\"#F0F0F3\"},\"activeDataLabelStyle\":{\"color\":\"#F0F0F3\"}},\"navigation\":{\"buttonOptions\":{\"symbolStroke\":\"#DDDDDD\",\"theme\":{\"fill\":\"#505053\"}}},\"legendBackgroundColor\":\"rgba(0, 0, 0, 0.5)\",\"background2\":\"#505053\",\"dataLabelsColor\":\"#B0B0B3\",\"textColor\":\"#C0C0C0\",\"contrastTextColor\":\"#F0F0F3\",\"maskColor\":\"rgba(255,255,255,0.3)\"},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":\"Droid+Sans\",\"debug\":false},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.3/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<script src=\"../../site_libs/proj4js-2.3.15/proj4.js\"></script>\n<link href=\"../../site_libs/highcharts-9.3.1/css/motion.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/highcharts-9.3.1/highcharts.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/highcharts-3d.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/highcharts-more.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/stock.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/map.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/data.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/exporting.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/offline-exporting.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/drilldown.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/item-series.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/overlapping-datalabels.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/annotations.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/export-data.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/funnel.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/heatmap.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/treemap.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/sankey.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/dependency-wheel.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/organization.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/solid-gauge.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/streamgraph.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/sunburst.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/vector.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/wordcloud.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/xrange.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/tilemap.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/venn.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/gantt.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/timeline.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/parallel-coordinates.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/bullet.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/coloraxis.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/dumbbell.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/lollipop.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/series-label.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/plugins/motion.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/custom/reset.js\"></script>\n<script src=\"../../site_libs/highcharts-9.3.1/modules/boost.js\"></script>\n<script src=\"../../site_libs/highchart-binding-0.9.4/highchart.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}